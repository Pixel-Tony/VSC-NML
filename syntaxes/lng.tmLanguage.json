{
	"name": "LNG",
	"patterns": [
		{
			"include": "#comment"
        },
        {
			"include": "#control-statement"
		},
		{
			"include": "#keys"
		},
		{
			"include": "#values"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.lng",
					"begin": "//",
					"end": "$"
				}
			]
        },
        "control-statement": {
            "patterns": [
				{
					"name": "keyword.control.include.lng",
					"begin": "(##grflangid|##gender|##case|##map_case|##map_gender)",
					"end": "$"
				}
            ]
		},
		"keys": {
			"name": "entity.other.attribute-name.keys.lng",
			"match": "^[^=]*(?==)"
		},
		"values": {
			"begin": "\\:",
			"end": "$",
			"name": "variable.parameter.values.lng",
			"patterns": [
				{
					"begin": "{",
					"end": "}",
					"name": "entity.name.function.values.lng"
				},
				{
					"match": "ยง[0-9a-fk-or]{1}",
					"name": "entity.name.function.values.lng"
				},
				{
					"match": "%([1-9]+\\$)?(\\d)*(\\.(\\d)+)?[dcbsfexh]",
					"name": "entity.name.tag.values.lng"
				},
				{
					"match": ".",
					"name": "entity.other.inherited-class.values.lng"
				},
				{
					"name": "support.class.error.lng",
					"match": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))(COMMA|SIGNED_WORD|UNSIGNED_WORD|CURRENCY|VELOCITY|VOLUME|VOLUME_SHORT|POWER|WEIGHT|WEIGHT_SHORT|CARGO_LONG|CARGO_SHORT|CARGO_TINY|CARGO_NAME|HEX|STRING|DATE_1920_LONG|DATE_1920_SHORT|DATE_LONG|DATE_SHORT|POP_WORD|STATION)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))"
				}
			]
		}
	},
	"scopeName": "source.lng"
}